% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{DreamAI}
\alias{DreamAI}
\title{Imputation of Missing Protein Abundances with Iterative Prediction Model}
\usage{
DreamAI(data, k = 10, maxiter_MF = 10, ntree = 100,
  maxnodes = NULL, maxiter_ADMIN = 30, tol = 10^(-2),
  gamma_ADMIN = NA, gamma = 50, CV = FALSE,
  fillmethod = "row_mean", maxiter_RegImpute = 10,
  conv_nrmse = 1e-06, iter_SpectroFM = 40, method = c("KNN",
  "MissForest", "ADMIN", "Brinn", "SpectroFM", "RegImpute", "Ensemble"))
}
\arguments{
\item{data}{dataset in the form of a matrix or dataframe with missing values or NA's. The function throws an error message and stops if any row or column in the dataset is missing all values}

\item{k}{number of neighbors to be used in the imputation by KNN and ADMIN (default is 10)}

\item{maxiter_MF}{maximum number of iteration to be performed in the imputation by "MissForest" if the stopping criteria is not met beforehand}

\item{ntree}{number of trees to grow in each forest in "MissForest"}

\item{maxnodes}{maximum number of terminal nodes for trees in the forest in "MissForest", has to equal at least the number of columns in the given data}

\item{maxiter_ADMIN}{maximum number of iteration to be performed in the imputation by "ADMIN" if the stopping criteria is not met beforehand}

\item{tol}{convergence threshold for "ADMIN"}

\item{gamma_ADMIN}{parameter for ADMIN to control abundance dependent missing. Set gamma_ADMIN=0 for log ratio intensity data. For abundance data put gamma_ADMIN=NA, and it will be estimated accordingly}

\item{gamma}{parameter of the supergradients of popular nonconvex surrogate functions, e.g. SCAD and MCP of L0-norm for Brinn}

\item{CV}{a logical value indicating whether to fit the best gamma with cross validation for "Brinn". If CV=FALSE, default gamma=50 is used, while if CV=TRUE gamma is calculated using cross-validation.}

\item{fillmethod}{a string identifying the method to be used to initially filling the missing values using simple imputation for "RegImpute". That could be "row_mean" or "zeros", with "row_mean" being the default. It throws an warning if "row_median" is used.}

\item{maxiter_RegImpute}{maximum number of iterations to reach convergence in the imputation by "RegImpute"}

\item{conv_nrmse}{convergence threshold for "RegImpute"}

\item{iter_SpectroFM}{number of iterations for "SpectroFM"}

\item{method}{a vector of imputation methods: ("KNN", "MissForest", "ADMIN", "Brinn", "SpectroFM, "RegImpute", "Ensemble"). Default is "Ensemble" if nothing is specified}
}
\value{
a list of imputed datasets by different methods as specified by the user. Always returns imputed data by "Ensemble"
}
\description{
The function DreamAI imputes a dataset with missing values or NA's using 7 different methods: "KNN": k nearest neighbor, "MissForest": nonparametric Missing Value Imputation using Random Forest, "ADMIN": abundance dependent missing imputation, "Brinn": imputation using IRNN-SCAD algorithm, "SpectroFM": imputation using matrix factorization, "RegImpute": imputation using Glmnet ridge regression and "Ensemble": aggregation of the 6 methods using simple average.
}
\examples{
\dontrun{
data(datapnnl)
data<-datapnnl.rm.ref[1:100,1:21]
impute<- DreamAI(data,k=10,maxiter_MF = 10, ntree = 100,maxnodes = NULL,maxiter_ADMIN=30,tol=10^(-2),gamma_ADMIN=NA,gamma=50,CV=FALSE,fillmethod="row_mean",maxiter_RegImpute=10,conv_nrmse = 1e-6,iter_SpectroFM=40, method = c("Ensemble"))
impute$Ensemble
}
}
